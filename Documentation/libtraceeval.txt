libtraceeval(3)
===============

NAME
----
libtraceeval - A trace evaluation helper library

SYNOPSIS
--------
[verse]
--
*#include <traceeval.h>*

Creating and releasing the traceeval resources:
	struct traceeval pass:[*]*traceeval_init*(struct traceeval_type pass:[*]_keys_, struct traceeval_type pass:[*]_vals_);
	struct traceeval pass:[*]*traceeval_init_size*(struct traceeval_type pass:[*]_keys_, struct traceeval_type pass:[*]_vals_,
				       int _nr_keys_, int _nr_vals_);
	void *traceeval_release*(struct traceeval pass:[*]_teval_);

Inserting and removing elements from the traceeval:
	int *traceeval_insert*(struct traceeval pass:[*]_teval_,
			  const struct traceeval_data pass:[*]_keys_,
			  const struct traceeval_data pass:[*]_vals_);

	int *traceeval_insert_size*(struct traceeval pass:[*]_teval_,
			  const struct traceeval_data pass:[*]_keys_, size_t _nr_keys_,
			  const struct traceeval_data pass:[*]_vals_, size_t _nr_vals_);

	int *traceeval_remove*(struct traceeval pass:[*]_teval_, const struct traceeval_data pass:[*]_keys_);

	int *traceeval_remove_size*(struct traceeval pass:[*]_teval_,
			  const struct traceeval_data pass:[*]_keys_, size_t _nr_keys_);

	int *traceeval_query*(struct traceeval pass:[*]_teval_, const struct traceeval_data pass:[*]_keys_,
			 const struct traceeval_data pass:[**]_results_);

	int *traceeval_query_size*(struct traceeval pass:[*]_teval_, const struct traceeval_data pass:[*]_keys_,
			 size_t _nr_keys_, const struct traceeval_data pass:[**]_results_);

	void *traceeval_results_release*(struct traceeval pass:[*]_teval_,
			       const struct traceeval_data pass:[**]_results_);

	size_t *traceeval_count*(struct traceeval pass:[*]_teval_);

Functions for iterating over the elements of the libtraceeval:
	struct traceeval_iterator pass:[*]*traceeval_iterator_get*(struct traceeval pass:[*]_teval_);
	void *traceeval_iterator_put*(struct traceeval_iterator pass:[*]_iter_);
	int *traceeval_iterator_sort*(struct traceeval_iterator pass:[*]_iter_, const char pass:[*]_sort_field_,
			    int _level_, bool _ascending_);
	int *traceeval_iterator_sort_custom*(struct traceeval_iterator pass:[*]_iter_,
				   traceeval_cmp_fn _sort_fn_, void pass:[*]_data_);
	int *traceeval_iterator_next*(struct traceeval_iterator pass:[*]_iter_,
			    const struct traceeval_data pass:[**]_keys_);
	int *traceeval_iterator_query*(struct traceeval_iterator pass:[*]_iter_,
			     const struct traceeval_data pass:[**]_results_);
	void *traceeval_iterator_results_release*(struct traceeval_iterator pass:[*]_iter_,
					const struct traceeval_data pass:[*]_results_);
	struct traceeval_stat pass:[*]*traceeval_iterator_stat*(struct traceeval_iterator pass:[*]_iter_,
					       struct traceeval_type pass:[*]_type_);
	int *traceeval_iterator_remove*(struct traceeval_iterator pass:[*]_iter_);

Functions to manage statistics of values of a traceeval:
	struct traceeval_stat pass:[*]*traceeval_stat*(struct traceeval pass:[*]_teval_,
				      const struct traceeval_data pass:[*]_keys_,
				      const char pass:[*]_val_name_);
	struct traceeval_stat pass:[*]*traceeval_stat_size*(struct traceeval pass:[*]_teval_,
					   const struct traceeval_data pass:[*]_keys_,
					   size_t _nr_keys_,
					   const char pass:[*]_val_name_);

	unsigned long long *traceeval_stat_max*(struct traceeval_stat pass:[*]_stat_);
	unsigned long long *traceeval_stat_min*(struct traceeval_stat pass:[*]_stat_);
	unsigned long long *traceeval_stat_max_timestamp*(struct traceeval_stat pass:[*]_stat_, unsigned long long pass:[*]ts);
	unsigned long long *traceeval_stat_min_timestamp*(struct traceeval_stat pass:[*]_stat_, unsigned long long pass:[*]ts);
	unsigned long long *traceeval_stat_total*(struct traceeval_stat pass:[*]_stat_);
	unsigned long long *traceeval_stat_count*(struct traceeval_stat pass:[*]_stat_);
--

DESCRIPTION
-----------
The libtracefs(3) library provides APIs to access kernel trace file system.

FILES
-----
[verse]
--
*traceeval.h*
	Header file to include in order to have access to the library APIs.
*-ltraceeval*
	Linker switch to add when building a program that uses the library.
--

SEE ALSO
--------
*libtracecmd*

AUTHOR
------
[verse]
--
*Steven Rostedt* <rostedt@goodmis.org>
--

REPORTING BUGS
--------------
Report bugs to  <linux-trace-devel@vger.kernel.org>

LICENSE
-------
TBD

RESOURCES
---------
TBD

COPYING
-------
Copyright \(C) 2023 Google, llc.
